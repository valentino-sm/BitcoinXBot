from aiogram import types
from aiogram.types import InlineKeyboardMarkup

from components import Rates
from telegram.keyboards.inline.consts import InlineConstructor
from telegram.keyboards.common import get_back_button, cb_start
from telegram.utils import rate_limit, reply
from utils.async_lru import alru_cache
from utils.i18n import gettext as _


async def cmd_info(msg: types.Message):
    INFO_TEXT = _(
        """ü¶ö <b>–ö—Ä–∞—Ç–∫–æ –æ –±–æ—Ç–µ</b>
        
–°–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π —Å–ø–æ—Å–æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ —Ç–∞–∫–æ–π:
BTC ‚Üí UltraClean BTC ‚Üí RUB

üå≤ –ª—é–¥–∏ –∑–∞–≤–æ–¥—è—Ç –±–∏—Ç–∫–∏ (BTC) ‚Üí
ü•¨ –º–µ–Ω—è—é—Ç –∏—Ö –Ω–∞ –£–ª—å—Ç—Ä–∞–ß–∏—Å—Ç—ã–µ –±–∏—Ç–∫–∏ (UltraClean BTC) ‚Üí
üçá –≤—ã–≤–æ–¥—è—Ç –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∏–ª–∏ –º–µ–Ω—è—é—Ç –≤ USD ‚Üí
üí∂ –≤—ã–≤–æ–¥—è—Ç USD –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ <b>—Ä—É–±–ª–∏ (RUB)</b> <i>–æ–Ω–ª–∞–π–Ω</i> –≤ –ª—é–±–æ–π –±–∞–Ω–∫ –†–§ –ø–æ –°–∏—Å—Ç–µ–º–µ –ë—ã—Å—Ç—Ä—ã—Ö –ü–ª–∞—Ç–µ–∂–µ–π (–∏–ª–∏ –∑–∞–±–∏—Ä–∞—é—Ç <i>–Ω–∞–ª–∏—á–Ω—ã–µ</i>) —á–µ—Ä–µ–∑ @ColdSig. –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–µ–π—á–∞—Å –∫–æ–º–∏—Å—Å–∏—è –∑–∞ –≤—ã–≤–æ–¥ –∫—Ä–∏–ø—Ç—ã –≤ —Ä—É–±–ª–∏ - –≤—Å–µ–≥–æ <code>3.50%</code>.

üí∂ –¢–∞–∫–∂–µ —á–µ—Ä–µ–∑ @ColdSig –º–æ–∂–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –∫—Ä–∏–ø—Ç—É –≤ –ª—é–±—ã—Ö –æ–±—ä—ë–º–∞—Ö –∑–∞ –Ω–∞–ª –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –¥–Ω—è –∏ –Ω–æ—á–∏ 24/7. üåÉ –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ.

–ü—Ä–æ—á–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —ç—Ç–æ–≥–æ –±–æ—Ç–∞:

‚Äî <b>–ö–æ—à–µ–ª—ë–∫</b> - –±–µ–∑–æ–ø–∞—Å–Ω—ã–π <i>–∫–æ—à–µ–ª—ë–∫-—Ö—Ä–∞–Ω–∏–ª–∏—â–µ, –±–∏—Ä–∂–∞ –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –ø–ª–∞—Ç–µ–∂–µ–π</i> —Å –∂–µ–ª–µ–∑–æ–±–µ—Ç–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é –∏ –±–µ–∑—É–ø—Ä–µ—á–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.

‚Äî <b>–ü–µ—Ä–µ–≤–æ–¥—ã –ö–û–î–ê–ú–ò</b> - –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –ª—é–±—É—é —Å—É–º–º—É –≤ <b>RUB, USD, EUR, BTC</b>  –ª—é–±–æ–º—É —á–µ–ª–æ–≤–µ–∫—É –∞–±—Å–æ–ª—é—Ç–Ω–æ <i>–±–µ—Å–ø–ª–∞—Ç–Ω–æ</i>–∏ <i>–±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π</i>.

‚Äî <b>–ë–∏—Ä–∂–∞</b> - –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ —Ä—ã–Ω–∫—É.

‚Äî <b>VPN</b>: —Å–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π VPN-—Å–µ—Ä–≤–∏—Å —Å –æ–ø–ª–∞—Ç–æ–π –∫—Ä–∏–ø—Ç–æ–π –ø–æ –≤—ã–≥–æ–¥–Ω–æ–º—É –∫—É—Ä—Å—É.

‚Äî –ü–æ –∂–µ–ª–∞–Ω–∏—é (–º—ã –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º) <b>–ø—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å—Ç–µ–π–±–ª–∫–æ–∏–Ω–æ–≤</b> (USDT, USDC, GUSD) –∏ –∞–¥—Ä–µ—Å–∞ Ethereum.

‚Äî –ü–æ –∂–µ–ª–∞–Ω–∏—é (–º—ã –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º) <b>AML-–ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥—Ä–µ—Å–æ–≤ Bitcoin</b>."""
    )
    await reply(msg=msg, text=INFO_TEXT, reply_markup=await _get_general_keyboard())


async def cmd_pass(msg: types.Message):
    # TODO: pass
    pass


async def cmd_faq(msg: types.Message):
    pass


@rate_limit(1, 'start')
async def cmd_rates(msg: types.Message):
    rates: Rates = await Rates.query.gino.first()
    RATES_TEXT = f"""üå≤ <b>Bitcoin, Ethereum (BitMEX)</b>
<b>BTC</b>/USDT: <code>{rates.BitMEX_BTC_USD:.4f}</code>
<b>ETH</b>/USDT: <code>{rates.BitMEX_ETH_USD:.4f}</code>
<b>BTC</b>/RUB: <code>{rates.BTC_RUB:.2f}</code>
<b>ETH</b>/RUB: <code>{rates.ETH_RUB:.2f}</code>

üåø <b>Fiat</b>
<b>USD</b>/RUB: <code>{rates.USD_RUB:.2f}</code>
<b>EUR</b>/RUB: <code>{rates.EUR_RUB:.2f}</code>
<b>CNY</b>/USD: <code>{rates.CNY_USD:.2f}</code>
<b>CNY</b>/RUB: <code>{rates.CNY_RUB:.2f}</code>"""
    await reply(msg=msg, text=RATES_TEXT, reply_markup=await _get_general_keyboard())


async def cmd_sbp(msg: types.Message):
    link = "https://help.tinkoff.ru/black/debit-common/sbp-turn-on/"
    SBP_TEXT = _(
        """üå≤ü•¨ –í–∫–ª—é—á–∞–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–µ–π –ø–æ <b>–°–∏—Å—Ç–µ–º–µ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π (–°–ë–ü)</b> –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω <b><a href="{link}">–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞—Å–∞–Ω–∏–π</a></b>.""") \
        .format(link=link)
    keyboard = await _get_sbp_keyboard(btn_link=_("ü•¨–í–∫–ª—é—á–∏—Ç—å –°–ë–ü"), btn_back="üå≤ Super!", link=link)
    await reply(msg=msg, text=SBP_TEXT, disable_web_page_preview=True, reply_markup=keyboard)


@alru_cache
async def _get_sbp_keyboard(btn_link: str, btn_back: str, link: str) -> InlineKeyboardMarkup:
    return InlineConstructor.create_kb([{"text": btn_link, "url": link},
                                        {"text": btn_back, "cb": ({"property": "start", "value": "refresh"}, cb_start)}
                                        ],
                                       schema=[1, 1])


async def cmd_atm(msg: types.Message):
    SBPATM_TEXT = _("""üå≤ü•¨ <b>–ö–∞—Ä—Ç–∞ –±–∞–Ω–∫–æ–º–∞—Ç–æ–≤ –¢–∏–Ω—å–∫–æ—Ñ—Ñ</b>

https://www.tinkoff.ru/maps/atm/?partner=tcs""")

    await reply(msg=msg, text=SBPATM_TEXT, disable_web_page_preview=True, reply_markup=await _get_general_keyboard())


async def cmd_atmusd(msg: types.Message):
    ATMUSD_TEXT = _("""üå≤ü•¨ <b>–ö–∞—Ä—Ç–∞ –±–∞–Ω–∫–æ–º–∞—Ç–æ–≤ –¢–∏–Ω—å–∫–æ—Ñ—Ñ</b> (USD)

https://www.tinkoff.ru/maps/atm/?partner=tcs&currency=USD&amount=5000""")
    await reply(msg=msg, text=ATMUSD_TEXT, disable_web_page_preview=True, reply_markup=await _get_general_keyboard())


async def cmd_id(msg: types.Message):
    await reply(msg=msg, text=f"<code>{msg.from_user.id}</code> {msg.from_user.mention}",
                reply_markup=await _get_general_keyboard())


async def _get_general_keyboard() -> InlineKeyboardMarkup:
    return await get_back_button(_("üå≤ –ú–ï–ù–Æ"))
