from typing import Optional

from pydantic import condecimal
from sqlalchemy import Column, Integer, BigInteger, String, Numeric
from sqlmodel import Field, SQLModel


class User(SQLModel, table=True):
    __tablename__ = "main"

    id: Optional[int] = Field(default=None, sa_column=Column(BigInteger(), primary_key=True, autoincrement=True))
    userid: Optional[int] = Field(index=True, sa_column=Column(BigInteger()))
    username: Optional[str] = Field(max_length=60, sa_column=Column(String(60)))
    signup: Optional[int] = Field(sa_column=Column(Integer()))
    i: Optional[int] = Field(sa_column=Column(BigInteger()))
    v: Optional[int] = Field(sa_column=Column(Integer()))
    exp: Optional[str] = Field(max_length=1, sa_column=Column(String(1)))
    def_cur: Optional[str] = Field(max_length=3, sa_column=Column(String(3)))
    send_am: Optional[condecimal(max_digits=20, decimal_places=8)] = Field(sa_column=Column(Numeric(20, 8)))
    send_as: Optional[str] = Field(max_length=5, sa_column=Column(String(5)))
    send_ac: Optional[int] = Field(sa_column=Column(BigInteger()))
    last_use: Optional[int] = Field(sa_column=Column(Integer()))
    lang: Optional[str] = Field(sa_column=Column(String(2)))
    parent: Optional[int] = Field(sa_column=Column(BigInteger()))
    invited: Optional[int] = Field(sa_column=Column(Integer()))
    earned: Optional[condecimal(max_digits=16, decimal_places=8)] = Field(sa_column=Column(Numeric(16, 8)))
    do: Optional[str] = Field(max_length=70, sa_column=Column(String(70)))
    BalUpdated: Optional[int] = Field(sa_column=Column(Integer()))
    USD: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    USDX: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    EUR: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    EURX: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    RUB: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    RUBX: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    UAH: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    UAHX: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    BYN: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    BYNX: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    GEL: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    GELX: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    UZS: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    UZSX: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    KZT: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    KZTX: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    CNY: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    CNYX: Optional[condecimal(max_digits=20, decimal_places=4)] = Field(sa_column=Column(Numeric(20, 4)))
    BTC: Optional[condecimal(max_digits=16, decimal_places=8)] = Field(sa_column=Column(Numeric(16, 8)))
    BTC_blocked: Optional[condecimal(max_digits=16, decimal_places=8)] = Field(sa_column=Column(Numeric(16, 8)))
    UBTC: Optional[condecimal(max_digits=16, decimal_places=8)] = Field(sa_column=Column(Numeric(16, 8)))
    UBTC_blocked: Optional[condecimal(max_digits=16, decimal_places=8)] = Field(sa_column=Column(Numeric(16, 8)))
    ETH: Optional[condecimal(max_digits=16, decimal_places=8)] = Field(sa_column=Column(Numeric(16, 8)))
    ETH_blocked: Optional[condecimal(max_digits=16, decimal_places=8)] = Field(sa_column=Column(Numeric(16, 8)))
    BNB: Optional[condecimal(max_digits=16, decimal_places=4)] = Field(sa_column=Column(Numeric(16, 4)))
    BNBX: Optional[condecimal(max_digits=16, decimal_places=4)] = Field(sa_column=Column(Numeric(16, 4)))
    m_id: Optional[int] = Field(sa_column=Column(BigInteger()))
    osl: Optional[int] = Field(sa_column=Column(Integer()))
    bot: Optional[str] = Field(max_length=15, sa_column=Column(String(15)))
    pr: Optional[int] = Field(sa_column=Column(Integer()))
    comment: Optional[str] = Field(max_length=10, sa_column=Column(String(10)))
    z: Optional[str] = Field(max_length=1, sa_column=Column(String(1)))
    p: Optional[str] = Field(max_length=1, sa_column=Column(String(1)))
